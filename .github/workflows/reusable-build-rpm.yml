name: Build RPM Package

on:
  workflow_call:
    inputs:
      pg_version:
        required: true
        type: string
      package_version:
        required: true
        type: string

jobs:
  build:
    name: PG ${{ inputs.pg_version }} RPM
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create source tarball
        run: |
          mkdir -p pg_stat_insights-${{ inputs.package_version }}
          # Copy all source files
          cp *.c pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp *.sql pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp *.control pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp *.conf pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp Makefile pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp meson.build pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp LICENSE README.md INSTALL.md CHANGELOG.md CONTRIBUTING.md SECURITY.md pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          cp -r sql expected pg_stat_insights-${{ inputs.package_version }}/ 2>/dev/null || true
          tar czf pg_stat_insights-${{ inputs.package_version }}.tar.gz pg_stat_insights-${{ inputs.package_version }}
          mkdir -p ~/rpmbuild/SOURCES
          mv pg_stat_insights-${{ inputs.package_version }}.tar.gz ~/rpmbuild/SOURCES/
      
      - name: Build RPM in Docker
        run: |
          docker run --rm \
            -v $PWD:/workspace \
            -v $HOME/rpmbuild:/root/rpmbuild \
            -w /workspace \
            rockylinux:9 \
            bash -c '
              set -e
              
              # Install build tools
              dnf install -y rpm-build rpmdevtools gcc make
              
              # Enable CRB repo for development packages
              dnf install -y dnf-plugins-core
              dnf config-manager --set-enabled crb
              
              # Install PostgreSQL repository
              ARCH=$(uname -m)
              dnf install -y --nogpgcheck https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-${ARCH}/pgdg-redhat-repo-latest.noarch.rpm
              dnf -qy module disable postgresql
              
              # Install PostgreSQL development packages
              dnf install -y --nogpgcheck postgresql${{ inputs.pg_version }}-server postgresql${{ inputs.pg_version }}-devel
              
              # Build RPM
              rpmbuild -ba packaging/rpm/pg_stat_insights.spec \
                --define "pg_version ${{ inputs.pg_version }}" \
                --define "package_version ${{ inputs.package_version }}"
              
              # Copy built packages
              mkdir -p /workspace/rpms
              cp /root/rpmbuild/RPMS/*/*.rpm /workspace/rpms/ || true
              cp /root/rpmbuild/SRPMS/*.rpm /workspace/rpms/ || true
              ls -lh /workspace/rpms/
            '
      
      - name: Upload RPM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rpm-pg${{ inputs.pg_version }}
          path: rpms/*.rpm
          retention-days: 30

